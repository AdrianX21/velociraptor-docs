<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Low level on Velociraptor - Digging deeper!</title><link>https://docs.velociraptor.app/tags/low-level/</link><description>Recent content in Low level on Velociraptor - Digging deeper!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Jun 2020 00:38:44 +0000</lastBuildDate><atom:link href="https://docs.velociraptor.app/tags/low-level/index.xml" rel="self" type="application/rss+xml"/><item><title>The Velociraptor Query Language Pt 2</title><link>https://docs.velociraptor.app/blog/2020/2020-06-19-the-velociraptor-query-language-pt-2-fe92bb7aa150/</link><pubDate>Fri, 19 Jun 2020 00:38:44 +0000</pubDate><guid>https://docs.velociraptor.app/blog/2020/2020-06-19-the-velociraptor-query-language-pt-2-fe92bb7aa150/</guid><description>In our previous article I introduced the basics of the Velociraptor Query Language (VQL). We have learned the basic structure of VQL is similar to the SQL SELECT statement
However, one of the main differences between SQL and VQL is that VQL’s data sources are not simple data tables, but are instead executable code termed “plugins”. VQL plugins are simply generators of rows, and may take a number of named arguments.</description></item><item><title>The Velociraptor Query Language Pt 1</title><link>https://docs.velociraptor.app/blog/2020/2020-06-14-the-velociraptor-query-language-pt-1-d721bff100bf/</link><pubDate>Sun, 14 Jun 2020 00:38:44 +0000</pubDate><guid>https://docs.velociraptor.app/blog/2020/2020-06-14-the-velociraptor-query-language-pt-1-d721bff100bf/</guid><description>Velociraptor’s query language is central to the operation of Velociraptor. We find it being used in querying endpoints, collecting forensic artifacts and endpoint state and even in post processing data on the server.
Velociraptor is ultimately just a VQL query evaluation engine!
Why should you know more about VQL? Users do not actually need to know VQL to simply collect DFIR artifacts from endpoints, hunt for malware or remediate an infection.</description></item></channel></rss>