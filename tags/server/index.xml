<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Server on Velociraptor - Digging deeper!</title><link>https://docs.velociraptor.app/tags/server/</link><description>Recent content in Server on Velociraptor - Digging deeper!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 29 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://docs.velociraptor.app/tags/server/index.xml" rel="self" type="application/rss+xml"/><item><title>Scaling Velociraptor</title><link>https://docs.velociraptor.app/blog/2021/2021-04-29-scaling-velociraptor-57acc4df76ed/</link><pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/blog/2021/2021-04-29-scaling-velociraptor-57acc4df76ed/</guid><description>Hunting at scale Velociraptor is an endpoint visibility tool designed to query a large number of endpoints quickly and efficiently. In previous releases, Velociraptor was restricted to a single server performing all functions, such as serving the GUI, the gRPC API as well as connections to the clients (endpoint agents). While this architecture is regularly used to serve up to 10k-15k endpoints, at high number of endpoints, we are starting to hit limitations with the single server model.</description></item><item><title>Exchange.Label.User</title><link>https://docs.velociraptor.app/exchange/artifacts/pages/exchange.label.user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/exchange/artifacts/pages/exchange.label.user/</guid><description>This artifact watches for new client enrolments and automatically label the client with the required label if the user exists.
This artifact can be the starting point for automatically labeling a machine based on any other property - just change the artifact to watch and the result filter.
#server #event #labels
name: Exchange.Label.User description: | This artifact watches for new client enrolments and automatically label the client with the required label if the user exists.</description></item></channel></rss>